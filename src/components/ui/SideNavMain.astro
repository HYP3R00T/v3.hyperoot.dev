---

---

<div
  class="text-white p-4 hidden lg:flex flex-col gap-4 transition duration-500"
>
  <a class="nav-item" href="#about">
    <div class="nav-line w-20 bg-lightest"></div>
    <div class="nav-link text-lightest">About</div>
  </a>

  <a class="nav-item" href="#projects">
    <div class="nav-line w-10 bg-light"></div>
    <div class="nav-link text-light">Projects</div>
  </a>

  <a class="nav-item" href="/article">
    <div class="nav-line w-10 bg-light"></div>
    <div class="nav-link text-light">Articles</div>
  </a>
</div>

<div
  class="scrollbar lg:hidden flex flex-row w-5/6 gap-6 text-white px-6 py-2 my-5 items-center align-middle overflow-x-scroll border-blurred border-2 border-b-0"
>
  <a class="text-base" href="/#about">
    <div class="text-light">About</div>
  </a>

  <a class="text-base" href="/#projects">
    <div class="text-light">Projects</div>
  </a>

  <a class="text-base" href="/article">
    <div class="text-light">Articles</div>
  </a>
</div>

<style>
  .nav-item {
    @apply flex flex-row items-center gap-3;
  }
  :hover.nav-item .nav-line {
    @apply h-px w-20 bg-accent;
  }
  :hover.nav-item .nav-link {
    @apply text-accent;
  }
  .nav-item .nav-line {
    @apply h-px;
  }
  .nav-item .nav-link {
    @apply text-xs uppercase font-semibold tracking-wide;
  }
  .scrollbar::-webkit-scrollbar {
    @apply h-[2px];
  }
  .scrollbar::-webkit-scrollbar-track {
    @apply rounded bg-blurred;
  }
</style>

<script>
  document.addEventListener("scroll", () => {
    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll(".nav-link");
    const navLines = document.querySelectorAll(".nav-line");

    // Ensure we have valid elements
    if (
      sections.length === 0 ||
      navLinks.length === 0 ||
      navLines.length === 0
    ) {
      return;
    }

    let index = sections.length;

    while (
      --index &&
      window.scrollY + 100 < (sections[index] as HTMLElement)?.offsetTop
    ) {}

    // Ensure index is within bounds
    if (index < 0 || index >= navLinks.length || index >= navLines.length) {
      return;
    }

    // Update navLinks
    navLinks.forEach((link) => link.classList.remove("text-lightest"));
    navLinks[index].classList.add("text-lightest");
    navLinks.forEach((link) => link.classList.add("text-light"));
    navLinks[index].classList.remove("text-light");

    // Update navLines
    navLines.forEach((line) => line.classList.remove("w-20"));
    navLines[index].classList.add("w-20");
    navLines.forEach((line) => line.classList.add("w-10"));
    navLines[index].classList.remove("w-10");
    navLines.forEach((line) => line.classList.remove("bg-lightest"));
    navLines[index].classList.add("bg-lightest");
    navLines.forEach((line) => line.classList.add("bg-light"));
    navLines[index].classList.remove("bg-light");
  });
</script>
